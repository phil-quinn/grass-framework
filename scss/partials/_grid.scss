@import "compass/utilities/general/clearfix";

/* Defaults which you can freely override */
$column-width: 60px !default;
$gutter-width: 20px !default;
$columns: 12 !default;
$grid-debug: false !default;

/* compass box flex defaults */
/* box-align: start | end | center | baseline | stretch */
$default-box-align: stretch;
/* box-orient: horizontal | vertical | inline-axis | block-axis | inherit */
$default-box-orient: horizontal;


/*//////////
// GRID //
//////////*/

@mixin grid-width($max:false) {
	$width: ($column-width*$columns) + ($gutter-width*$columns) - $gutter-width;
	width: $width;
	html.flexbox & {
		width: 100%;
		@if $max == true {
			max-width: $width;
		}
		@elseif $max {
			max-width: $max;
		}
	}
	@if $grid-debug {
		@debug "GRID-WIDTH";
		@debug "columns: #{$columns}";
		@debug "width: #{$width}";
	}
}

@mixin row($x:$columns) {

	width: auto;
	margin-left: -1 * $gutter-width;
	display: block;

	@include pie-clearfix();

	/* if we are passed 0, NO flexbox  */
	@if $x != 0 {

		/* only for when we have flexbox */
		html.flexbox & {
			width: 100%;
			margin-left: 0;
			@include display-box;
			@include box-orient();
			@include box-align();
		}
	}

	@if $grid-debug {
		@debug "ROW";
		@debug "width: #{$width}";
	}

}


@mixin column($x, $row_columns:$columns) {

	/* if we are passed 0, set to 100% wide */
	@if $x == 0 {
		display: block;
		width: 100%;
		margin-left: 0;
		margin-right: 0;
	}
	@else {

		$width: ($x * $column-width) + (($x - 1) * $gutter-width);
		$margin: $gutter-width;

		width: $width;
		margin-left: $margin;


		/* default, no flexbox styles */
		display: inline;
		float: left;


		/* only for when we have flexbox */
		html.flexbox & {
			display: block;
			float: none;
			&:first-child { margin-left: 0; }
			@include box-flex($x * $row_columns);
		}
	}
	@if $grid-debug {
		@debug "COLUMN";
		@debug "width: #{$width}";
		@debug "margin: #{$margin}";
	}

}

@mixin column-classes($columns:$columns) {

	@for $i from 1 through $columns {
		.cols-#{$i} { @include column( $i ); }
	}

}
